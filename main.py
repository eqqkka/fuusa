import telebot
from telebot import types
import random
from datetime import datetime, timedelta
import threading
import time
import pytz

TOKEN = '7507582678:AAFh76hUUGKWQr82fPcSnTzTAFZ-bIFwRKo'
bot = telebot.TeleBot(TOKEN)

# –ß–∞—Ç—ã
PHOTO_REVIEW_CHAT_ID = -1002498200426  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —á–∞—Ç –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ —Å —Ñ–æ—Ç–æ
ACTIVITY_CHAT_ID = -1002296054466      # –ì—Ä—É–ø–ø–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
LOG_CHAT_ID = 7823280397         # –õ–æ–≥-—á–∞—Ç

# –ü—Ä–∏–∑—ã –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
prizes = [
    ('10 –∑–≤–µ–∑–¥', 40),
    ('15 –∑–≤–µ–∑–¥', 25),
    ('25 –∑–≤–µ–∑–¥', 20),
    ('50 –∑–≤–µ–∑–¥', 10),
    ('75 –∑–≤–µ–∑–¥!', 4)
    ('100 –∑–≤–µ–∑–¥!', 1)
]

GIF_URL = 'https://media.giphy.com/media/WaExa2YxMRnyoLuITy/giphy.gif'

message_owners = {}
claimed_messages = set()
activity_counter = {}  # user_id -> count

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞
kazakhstan_tz = pytz.timezone('Asia/Almaty')


# ‚Äî‚Äî‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–æ—Ç–∑—ã–≤–æ–≤ —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–Ω–æ–ø–∫–æ–π
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    if message.chat.id != PHOTO_REVIEW_CHAT_ID:
        return
    if message.caption:
        msg_id = message.message_id
        user_id = message.from_user.id
        message_owners[msg_id] = user_id

        markup = types.InlineKeyboardMarkup()
        button = types.InlineKeyboardButton("üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑", callback_data=f"spin:{msg_id}")
        markup.add(button)

        bot.reply_to(
            message,
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑ üéÅ",
            reply_markup=markup
        )


# ‚Äî‚Äî‚Äî –ö–Ω–æ–ø–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞ –∑–∞ –æ—Ç–∑—ã–≤
@bot.callback_query_handler(func=lambda call: call.data.startswith('spin:'))
def handle_spin(call):
    msg_id = int(call.data.split(':')[1])
    user_id = call.from_user.id
    username = call.from_user.username or call.from_user.first_name

    if msg_id in claimed_messages:
        bot.answer_callback_query(call.id, "–ü—Ä–∏–∑ —É–∂–µ –±—ã–ª –≤—ã–¥–∞–Ω –∑–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    if message_owners.get(msg_id) != user_id:
        bot.answer_callback_query(call.id, "–¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –æ—Ç–∑—ã–≤–∞ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑!", show_alert=True)
        return

    prize = random.choices([p[0] for p in prizes], weights=[p[1] for p in prizes])[0]
    claimed_messages.add(msg_id)

    bot.send_animation(call.message.chat.id, GIF_URL)
    bot.send_message(call.message.chat.id, f"üéâ @{username}, —Ç–≤–æ–π –ø—Ä–∏–∑: *{prize}*", parse_mode="Markdown")
    bot.send_message(LOG_CHAT_ID, f"üéÅ –ü—Ä–∏–∑: *{prize}*\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}", parse_mode="Markdown")

    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
    bot.answer_callback_query(call.id)


# ‚Äî‚Äî‚Äî –°—á—ë—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
@bot.message_handler(func=lambda message: message.chat.id == ACTIVITY_CHAT_ID and message.text)
def track_activity(message):
    user_id = message.from_user.id
    activity_counter[user_id] = activity_counter.get(user_id, 0) + 1


# ‚Äî‚Äî‚Äî –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: —Ä–∞–∑–¥–∞—á–∞ –ø—Ä–∏–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É
def check_and_award_top_user():
    while True:
        now = datetime.now(kazakhstan_tz)
        weekday = now.weekday()
        hour = now.hour

        if ((weekday < 5 and 8 <= hour < 20) or (weekday >= 5 and 11 <= hour < 20)):
            if now.minute == 0 and now.hour % 3 == 0:
                if activity_counter:
                    top_user_id = max(activity_counter, key=activity_counter.get)
                    user_info = bot.get_chat_member(ACTIVITY_CHAT_ID, top_user_id).user
                    username = user_info.username or user_info.first_name
                    prize = random.choices([p[0] for p in prizes], weights=[p[1] for p in prizes])[0]

                    bot.send_animation(ACTIVITY_CHAT_ID, GIF_URL)
                    bot.send_message(ACTIVITY_CHAT_ID, f"üî• –°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞ 3 —á–∞—Å–∞ ‚Äî @{username}!\nüéÅ –ü—Ä–∏–∑: *{prize}*", parse_mode="Markdown")
                    bot.send_message(LOG_CHAT_ID, f"üèÜ –ê–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫:\nüë§ @{username}\nüéÅ –ü—Ä–∏–∑: *{prize}*", parse_mode="Markdown")

                    activity_counter.clear()

        time.sleep(60)


# ‚Äî‚Äî‚Äî –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞
threading.Thread(target=check_and_award_top_user, daemon=True).start()

# ‚Äî‚Äî‚Äî –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
