import os
import telebot
from telebot import types
import random
from datetime import datetime, timedelta
import pytz
import threading
import time

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = '123456789:ABCDEF_7507582678:AAFz5U6o2FBPRsGEugNTB3tY76f0HfNpswU'
# –ì—Ä—É–ø–ø—ã
PHOTO_REVIEW_GROUP_ID = -1002498200426  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≥—Ä—É–ø–ø—ã –¥–ª—è —Ñ–æ—Ç–æ–æ—Ç–∑—ã–≤–æ–≤
ACTIVITY_GROUP_ID = -1002296054466      # –≥—Ä—É–ø–ø–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
LOG_CHAT_ID = 7823280397               # —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤

bot = telebot.TeleBot(TOKEN)

GIF_URL = 'https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdjhxb2xoaDNsbHN3Y2ZwNXNzbHB0dWVsMzVpZWR4OXV2d3VkdDdtdCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/WaExa2YxMRnyoLuITy/giphy.gif'

prizes = [
    ('10 –∑–≤–µ–∑–¥', 40),
    ('15 –∑–≤–µ–∑–¥', 25),
    ('25 –∑–≤–µ–∑–¥', 20),
    ('50 –∑–≤–µ–∑–¥', 10),
    ('70 –∑–≤–µ–∑–¥!', 5)
]

# –•—Ä–∞–Ω–∏–ª–∏—â–∞
message_owners = {}
claimed_messages = set()
user_activity = {}
last_award_time = None

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞
kz_tz = pytz.timezone('Asia/Almaty')


def choose_random_prize():
    return random.choices([p[0] for p in prizes], weights=[p[1] for p in prizes])[0]


# üì∑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–æ—Ç–∑—ã–≤–æ–≤
@bot.message_handler(content_types=['photo'])
def handle_photo_review(message):
    if message.chat.id == PHOTO_REVIEW_GROUP_ID and message.caption:
        msg_id = message.message_id
        user_id = message.from_user.id
        message_owners[msg_id] = user_id

        markup = types.InlineKeyboardMarkup()
        button = types.InlineKeyboardButton("üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑", callback_data=f"spin:{msg_id}")
        markup.add(button)

        bot.reply_to(message, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑ üéÅ", reply_markup=markup)


# üéÅ –ö–Ω–æ–ø–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞ –∑–∞ –æ—Ç–∑—ã–≤
@bot.callback_query_handler(func=lambda call: call.data.startswith('spin:'))
def handle_spin(call):
    msg_id = int(call.data.split(':')[1])
    user_id = call.from_user.id
    username = call.from_user.username or call.from_user.first_name

    if msg_id in claimed_messages:
        bot.answer_callback_query(call.id, "–ü—Ä–∏–∑ —É–∂–µ –±—ã–ª –≤—ã–¥–∞–Ω –∑–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    if message_owners.get(msg_id) != user_id:
        bot.answer_callback_query(call.id, "–¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –æ—Ç–∑—ã–≤–∞ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑!", show_alert=True)
        return

    prize = choose_random_prize()
    claimed_messages.add(msg_id)

    bot.send_animation(call.message.chat.id, GIF_URL)
    bot.send_message(call.message.chat.id, f"üéâ @{username}, —Ç–≤–æ–π –ø—Ä–∏–∑: *{prize}*", parse_mode="Markdown")
    bot.send_message(LOG_CHAT_ID, f"üéÅ –ü—Ä–∏–∑: *{prize}*\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}", parse_mode="Markdown")
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
    bot.answer_callback_query(call.id)


# üßæ –£—á—ë—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
@bot.message_handler(content_types=['text'])
def handle_activity(message):
    if message.chat.id == ACTIVITY_GROUP_ID:
        user_id = message.from_user.id
        user_activity[user_id] = user_activity.get(user_id, 0) + 1


# üïí –¢–∞–π–º–µ—Ä –≤—ã–¥–∞—á–∏ –ø—Ä–∏–∑–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
def activity_award_loop():
    global last_award_time
    allowed_hours_weekdays = [8, 11, 14, 17, 20]
    allowed_hours_weekends = [11, 14, 17, 20]

    while True:
        now = datetime.now(kz_tz)
        weekday = now.weekday()  # 0 = Monday, 6 = Sunday
        current_hour = now.hour

        if weekday < 5:
            allowed_hours = allowed_hours_weekdays
        else:
            allowed_hours = allowed_hours_weekends

        if current_hour in allowed_hours:
            if last_award_time is None or last_award_time.hour != current_hour or (now - last_award_time).seconds > 3600:
                if user_activity:
                    top_user = max(user_activity.items(), key=lambda x: x[1])[0]
                    user_info = bot.get_chat_member(ACTIVITY_GROUP_ID, top_user).user
                    username = user_info.username or user_info.first_name

                    prize = choose_random_prize()
                    bot.send_animation(ACTIVITY_GROUP_ID, GIF_URL)
                    bot.send_message(
                        ACTIVITY_GROUP_ID,
                        f"üéä @{username}, —Ç—ã —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —á–∞—Å–∞! –¢–≤–æ–π –ø—Ä–∏–∑: *{prize}*",
                        parse_mode="Markdown"
                    )
                    bot.send_message(
                        LOG_CHAT_ID,
                        f"üèÜ –ü—Ä–∏–∑ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: *{prize}*\nüë§ @{username}",
                        parse_mode="Markdown"
                    )

                    user_activity.clear()
                    last_award_time = now
        time.sleep(60)


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=activity_award_loop, daemon=True).start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
